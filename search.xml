<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[apache的virtualhost]]></title>
      <url>http://yoursite.com/2016/09/11/apache%E7%9A%84virtualhost/</url>
      <content type="html"><![CDATA[<p>我们在开发的过程中，经常需要配置virtual hosts。在配置的过程中，又经常会遇到配置完之后，访问目录403禁止访问的情况。</p>
<p>一下几个地方我们注意一下，应该就能避免出现这个情况了。</p>
<p>###Apache的运行用户和用户组</p>
<p>在apache的配置文件中。可以找到这样两行：</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">User</span> <span class="title">daemon</span></div><div class="line"><span class="keyword">Group</span> <span class="title">daemon</span></div></pre></td></tr></table></figure>
<p>这就是apache运行的用户和用户组。我们项目里的文件通过web能否访问，需要根据这个用户或者组的权限来看。</p>
<p>###virtual host的配置</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Directory “D:test”&gt;</span></div><div class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> -Indexes FollowSymLinks</div><div class="line">    <span class="attribute">AllowOverride</span> None</div><div class="line">    <span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</div><div class="line">    <span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></div><div class="line"><span class="section">&lt;/Directory&gt;</span></div></pre></td></tr></table></figure>
<p>上面着一段配置说明：</p>
<ul>
<li>在Indexes前，加 + 代表允许目录浏览；加 – 代表禁止目录浏览。</li>
<li>FollowSymLinks表示是否允许浏览除了当前配置目录之外的其它文件。</li>
<li>AllowOverride 如果开启了rewrite模块的话，这个一定是是all,并且Options必须有FollowSymLinks才算正确的配置。</li>
<li>Order deny,allow和Allow from all一般配合起来用。表示线禁止，再允许，如果order deny,allow后有禁止访问列表的话。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[触屏版跳转到电脑版的一个小技巧]]></title>
      <url>http://yoursite.com/2016/09/05/%E8%A7%A6%E5%B1%8F%E7%89%88%E8%B7%B3%E8%BD%AC%E5%88%B0%E7%94%B5%E8%84%91%E7%89%88%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>大多数移动端的网站的最下面都有一个“电脑版”的链接。这个“电脑版”的功能是在手机上直接浏览电脑版的样式。<br>实现方法可以是这样的：<br>在电脑版里都有这一段代码：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(IS_MOBILE)&#123;</div><div class="line">	header(<span class="string">"Location:http://wap.***.com"</span>);</div><div class="line">	<span class="keyword">exit</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这是一段伪代码。只要把这段代码稍做修改：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(IS_MOBILE &amp;&amp; !IS_THERE_WAP_COOKIE)&#123;</div><div class="line">	header(<span class="string">"Location:http://wap.***.com"</span>);</div><div class="line">	<span class="keyword">exit</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>也就是说，只要从wap跳到pc站的时候，写了wap_cookie,那么调过来就不会跳回到wap了。<br>注意，跳过来的时候wap_cookie的过期时间要足够短才可以。否则的话，就一直跳不到wap页面了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS阻止默认行为和冒泡]]></title>
      <url>http://yoursite.com/2016/08/31/JS%E9%98%BB%E6%AD%A2%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA%E5%92%8C%E5%86%92%E6%B3%A1/</url>
      <content type="html"><![CDATA[<h3 id="阻止默认事件"><a href="#阻止默认事件" class="headerlink" title="阻止默认事件"></a>阻止默认事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopDefault</span>(<span class="params"> e </span>) </span>&#123; </div><div class="line"><span class="keyword">if</span> ( e &amp;&amp; e.preventDefault ) </div><div class="line">   e.preventDefault(); </div><div class="line"><span class="keyword">else</span> </div><div class="line">   <span class="built_in">window</span>.event.returnValue = <span class="literal">false</span>; </div><div class="line">   <span class="keyword">return</span> <span class="literal">false</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span> (<span class="params">obj,evt</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> e=(evt)?evt:<span class="built_in">window</span>.event;</div><div class="line">   <span class="keyword">if</span> (<span class="built_in">window</span>.event) &#123;</div><div class="line">      e.cancelBubble=<span class="literal">true</span>;<span class="comment">// ie下阻止冒泡</span></div><div class="line">   &#125; <span class="keyword">else</span> &#123;</div><div class="line">     <span class="comment">//e.preventDefault();</span></div><div class="line">     e.stopPropagation();<span class="comment">// 其它浏览器下阻止冒泡</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[苹果电脑DNS配置]]></title>
      <url>http://yoursite.com/2016/08/31/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91DNS%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>最近，我的苹果电脑经常由于dns导致不能上网的问题。多方查找之后，终于解决。<br>将解决办法记录下来：</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li><p>选取苹果菜单 &gt;“系统偏好设置”，然后点按“网络”。</p>
</li>
<li><p>打开“网络”偏好设置</p>
</li>
<li><p>在列表中选择想要使用的网络连接服务（例如 Wi-Fi 或以太网，除非您指定其他服务），然后点按“高级”。</p>
</li>
<li><p>点按“DNS”，然后点按“DNS 服务器”列表底部的添加按钮 。输入 DNS 服务器的 IPv4 或 IPv6 地址。比如我的IPv4地址是：192.168.43.1</p>
</li>
<li><p>点按“搜索域”列表底部的添加按钮 ，然后输入搜索域，如 baidu.com。</p>
</li>
<li><p>完成后，点按“好”。</p>
</li>
</ol>
<p>这样设置完之后，我马上就能上网了。希望能帮到有需要的盆友。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用canvas做刮刮乐]]></title>
      <url>http://yoursite.com/2016/08/31/canvas-lottery/</url>
      <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>一个div。背景图片为刮刮乐的中奖物品。然后给这个div一个canvas，有颜色的蒙版。然后通过清除蒙版的颜色，或者<strong>globalCompositeOperation</strong>来实现擦除效果。</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="准备html结构"><a href="#准备html结构" class="headerlink" title="准备html结构"></a>准备html结构</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>刮刮卡特效 - 独行冰海<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, width=device-width,minimum-scale=1.0,maximum-scale=1.0, user-scalable=no"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">		<span class="selector-class">.wrap</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">320px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">			<span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'奖品.jpg'</span>) <span class="number">0</span> <span class="number">0</span> no-repeat;</div><div class="line">		&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"con"</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"myCanvas"</span> <span class="attr">width</span>=<span class="string">"320"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这段代码的意思就是<strong>原理</strong>里讲到的，将中奖物品放置在容器中。</p>
<h4 id="基本功能实现代码"><a href="#基本功能实现代码" class="headerlink" title="基本功能实现代码"></a>基本功能实现代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myCanvas = <span class="built_in">document</span>.getElementById(<span class="string">'myCanvas'</span>);</div><div class="line"><span class="keyword">var</span> gray = myCanvas.getContext(<span class="string">'2d'</span>);</div><div class="line"></div><div class="line">gray.beginPath();</div><div class="line">gray.fillStyle = <span class="string">"#999"</span>;</div><div class="line">gray.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">320</span>,<span class="number">400</span>);</div><div class="line">gray.closePath();</div><div class="line">myCanvas.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">	e.preventDefault();		<span class="comment">//阻止默认事件</span></div><div class="line">	myCanvas.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">		gray.clearRect(e.targetTouches[<span class="number">0</span>].clientX, e.targetTouches[<span class="number">0</span>].clientY, <span class="number">30</span>, <span class="number">30</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>这样虽然完成了，但是效果比较粗糙。擦的画笔都是方块的，比较难看。下面来优化成以“圆笔”来实现的效果。</p>
<h4 id="优化代码效果"><a href="#优化代码效果" class="headerlink" title="优化代码效果"></a>优化代码效果</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myCanvas = <span class="built_in">document</span>.getElementById(<span class="string">'myCanvas'</span>);</div><div class="line"><span class="keyword">var</span> gray = myCanvas.getContext(<span class="string">'2d'</span>);</div><div class="line">gray.beginPath();</div><div class="line">gray.fillStyle = <span class="string">"#999"</span>;</div><div class="line">gray.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">320</span>,<span class="number">400</span>);</div><div class="line">gray.closePath();</div><div class="line">gray.globalCompositeOperation=<span class="string">"destination-out"</span>;	<span class="comment">//关键代码</span></div><div class="line">myCanvas.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">	myCanvas.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">		e.preventDefault();</div><div class="line">		gray.beginPath();	<span class="comment">//关键代码，保证每一次都有开始和闭合路径（换句话说，就是防止路径互相影响）</span></div><div class="line">		gray.fillStyle = <span class="string">"#f00"</span>;</div><div class="line">		gray.arc(e.targetTouches[<span class="number">0</span>].clientX, e.targetTouches[<span class="number">0</span>].clientY, <span class="number">20</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI*<span class="number">2</span>);</div><div class="line">		gray.fill();</div><div class="line">		gray.closePath();	<span class="comment">//关键代码，保证每一次都有开始和闭合路径（换句话说，就是防止路径互相影响）</span></div><div class="line">	&#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>如果想要实现圆形的形状，则必须使用arc的绘图方法。同时还需要使用到一个属性：globalCompositeOperation。该属性表示的是图形的组合方式。我们要使用到的是destination-out，它表示只绘制原图形与新图形不重叠的部分；原图形与新图形重叠的部分变透明。换句话说，就是我们在原有图形上进行绘制，覆盖的部分会变成透明的状态。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ptython爬虫学习系列记录(一) python爬虫原理]]></title>
      <url>http://yoursite.com/2016/08/18/python%E7%88%AC%E8%99%AB%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<h3 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h3><p>任何事物都可以看做一个对象。以对象方式来看待一个项目，并做合理的功能区间拆分，有助于我们更好的理解与管理项目。</p>
<p>如果把爬虫看成一只真实存在的虫子，我们大体可以将之拆分为以下几个功能件：</p>
<ul>
<li><a href="#controller">调度器</a>：负责调度其他功能件一起协同完成任务</li>
<li><a href="#urlmanager">url管理器</a>：负责向下载器分发下载url，并将下载过的链接进行记录[id]</li>
<li><a href="#downloader">下载器</a>：负责下载目标网址</li>
<li><a href="#parser">解析器</a>：负责将下载下来的网页内容解析成我们需要的内容</li>
<li><a href="#saver">存储器</a>：负责将下载下来的内容存储到存储设备</li>
</ul>
<p>下面我们一个一个来分析各个功能件。</p>
<p><strong>注意</strong>：看代码，特别是调度器的代码，应该以“读伪代码”的方式来看。这样能跟着整个流程来走，不至于被其他“枝节”影响到对流程的理解。</p>
<h3 id="构件分析"><a href="#构件分析" class="headerlink" title="构件分析"></a>构件分析</h3><p><a name="controller"></a></p>
<h4 id="调度器"><a href="#调度器" class="headerlink" title="调度器"></a>调度器</h4><p>兵马未动，代码先行：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> url_manager</div><div class="line"><span class="keyword">import</span> html_downloader</div><div class="line"><span class="keyword">import</span> html_parser</div><div class="line"><span class="keyword">import</span> html_outputer</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderMain</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.urls = url_manager.UrlManager()	<span class="comment">#调入url管理器</span></div><div class="line">        self.downloader = html_downloader.HtmlDownloader(） <span class="comment">#调入html下载器</span></div><div class="line">        self.parser = html_parser.HtmlParser() <span class="comment">#调入html解析器</span></div><div class="line">        self.outputer = html_outputer.HtmlOutputer() <span class="comment">#调入存储器</span></div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">craw</span><span class="params">(self, root_url)</span>:</span></div><div class="line">        count = <span class="number">1</span></div><div class="line">        self.urls.add_new_url(root_url)	<span class="comment">#初始化url管理器数据</span></div><div class="line">        <span class="keyword">while</span> self.urls.has_new_url():		<span class="comment">#只要url管理器里还有数据，循环不会终止</span></div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                new_url = self.urls.get_new_url() 	<span class="comment">#从url管理器中取出一个url资源</span></div><div class="line">                <span class="keyword">print</span> <span class="string">'craw %d :  %s'</span>  % (count,new_url) </div><div class="line">                html_cont = self.downloader.download(new_url) 	<span class="comment">#下载这个资源</span></div><div class="line">                new_urls,new_data = self.parser.parse(new_url,html_cont) 	<span class="comment">#解析资源</span></div><div class="line">                self.urls.add_new_urls(new_urls) 	<span class="comment">#将解析出来的新的url添加到url管理器中</span></div><div class="line">                self.outputer.collect_data(new_data) 	<span class="comment">#将解析出来的数据进行存储</span></div><div class="line">                <span class="keyword">if</span> count == <span class="number">500</span>: 	<span class="comment">#测试，输出500条数据后停止</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                count = count + <span class="number">1</span></div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                <span class="keyword">print</span> <span class="string">'failed'</span></div><div class="line">        </div><div class="line">        self.outputer.output_html()</div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    root_url = <span class="string">"http://baike.baidu.com/view/21087.htm"</span></div><div class="line">    obj_spider = SpiderMain()</div><div class="line">    obj_spider.craw(root_url)</div></pre></td></tr></table></figure>
<p><strong>流程解析</strong>：</p>
<ol>
<li>向url管理器中添加初始化url。</li>
<li>url管理器向下载器分发未下载过的url。</li>
<li>下载器下载接收到的url。</li>
<li>解析器获取需要的内容，并将新获得的url添加到url管理器中。</li>
<li>通过存储器将内容存储起来。</li>
</ol>
<p>看完上面所述的调度器所控制的流程以及注释，下面我们一个一个看看各个组件的具体实现。<br><a name="urlmanager"></a></p>
<h4 id="url管理器"><a href="#url管理器" class="headerlink" title="url管理器"></a>url管理器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="string">'''</span></div><div class="line">Created on 2016年8月10日</div><div class="line">@author: ruanwenwu</div><div class="line">'''</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlManager</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.new_urls = set()</div><div class="line">        self.old_urls = set()</div><div class="line">    </div><div class="line">    <span class="comment">#向管理器中添加一条url</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_url</span><span class="params">(self,url)</span>:</span></div><div class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.new_urls <span class="keyword">and</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.old_urls:</div><div class="line">            self.new_urls.add(url)</div><div class="line">    </div><div class="line">    <span class="comment">#向管理器中添加多条url</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_urls</span><span class="params">(self,urls)</span>:</span></div><div class="line">        <span class="keyword">if</span> urls <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> len(urls) == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</div><div class="line">            self.add_new_url(url)</div><div class="line">    </div><div class="line">    <span class="comment">#判断管理器中是否还有未爬的url</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_new_url</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> len(self.new_urls) != <span class="number">0</span></div><div class="line">    </div><div class="line">    <span class="comment">#从管理器中取出一个url</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_new_url</span><span class="params">(self)</span>:</span></div><div class="line">        new_url = self.new_urls.pop()</div><div class="line">        self.old_urls.add(new_url)</div><div class="line">        <span class="keyword">return</span> new_url</div></pre></td></tr></table></figure>
<p>url管理器里有四个方法，具体说明请看注释。<br><a name="downloader"></a></p>
<h4 id="下载器"><a href="#下载器" class="headerlink" title="下载器"></a>下载器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlDownloader</span><span class="params">(object)</span>:</span></div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(self,url)</span>:</span></div><div class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        </div><div class="line">        response = urllib2.urlopen(url)</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> response.getcode() != <span class="number">200</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line">        </div><div class="line">        <span class="keyword">return</span> response.read()</div></pre></td></tr></table></figure>
<p>下载器接收一个url作为参数，使用urllib2这个库进行下载，并返回下载的内容。<br><a name="parser"></a></p>
<h4 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> urlparse</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlParser</span><span class="params">(object)</span>:</span></div><div class="line">    </div><div class="line">    <span class="comment">#解析器主要程序。获得数据内容和新的url资源</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self ,page_url, html_cont)</span>:</span></div><div class="line">        <span class="keyword">if</span> page_url <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> html_cont <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        </div><div class="line">        soup = BeautifulSoup(html_cont,<span class="string">"html.parser"</span>,from_encoding=<span class="string">"utf-8"</span>)</div><div class="line">        new_urls = self._get_new_urls(page_url, soup)</div><div class="line">        new_data = self._get_new_data(page_url, soup)</div><div class="line">        <span class="keyword">return</span> new_urls,new_data</div><div class="line">    </div><div class="line">    <span class="comment">#从html内容中获取新的url资源，并添加到url管理器</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_urls</span><span class="params">(self,page_url,soup)</span>:</span></div><div class="line">        new_urls = set()</div><div class="line">        links = soup.find_all(<span class="string">'a'</span>,href=re.compile(<span class="string">r"/view/\d+\.htm"</span>))</div><div class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</div><div class="line">            new_url = link[<span class="string">'href'</span>]</div><div class="line">            new_full_url = urlparse.urljoin(page_url,new_url)</div><div class="line">            new_urls.add(new_full_url)</div><div class="line">        <span class="keyword">return</span> new_urls</div><div class="line">    </div><div class="line">    <span class="comment">#从html内容中获得需要的数据，并返回</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_data</span><span class="params">(self,page_url,soup)</span>:</span></div><div class="line">        res_data = &#123;&#125;</div><div class="line">        res_data[<span class="string">'url'</span>] = page_url</div><div class="line">        title_node = soup.find(<span class="string">'dd'</span>, class_=<span class="string">"lemmaWgt-lemmaTitle-title"</span>).find(<span class="string">"h1"</span>)</div><div class="line">        res_data[<span class="string">'title'</span>] = title_node.get_text()</div><div class="line">        summary_node = soup.find(<span class="string">"div"</span> , class_=<span class="string">"lemma-summary"</span>)</div><div class="line">        res_data[<span class="string">'summary'</span>] = summary_node.get_text()</div><div class="line">        <span class="keyword">return</span> res_data</div></pre></td></tr></table></figure>
<p>url解析器接收从下载器中传递过来的html内容作为参数。使用BeautifulSoup这个库，和re这个库进行内容解析。三个方法的具体作用，请看注释。<br><a name="saver"></a></p>
<h4 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlOutputer</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.datas = []</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect_data</span><span class="params">(self,data)</span>:</span></div><div class="line">        <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        self.datas.append(data)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">output_html</span><span class="params">(self)</span>:</span></div><div class="line">        fout = open(<span class="string">'output.html'</span> , <span class="string">'w'</span>)</div><div class="line">        fout.write(<span class="string">'&lt;html&gt;'</span>)</div><div class="line">        fout.write(<span class="string">"&lt;meta charset='utf-8'/&gt;"</span>)</div><div class="line">        fout.write(<span class="string">'&lt;body&gt;'</span>)</div><div class="line">        fout.write(<span class="string">'&lt;table border="1"&gt;'</span>)</div><div class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> self.datas:</div><div class="line">            fout.write(<span class="string">'&lt;tr&gt;'</span>)</div><div class="line">            fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'url'</span>])</div><div class="line">            fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'title'</span>].encode(<span class="string">'utf-8'</span>))</div><div class="line">            fout.write(<span class="string">"&lt;td&gt;%s&lt;/td&gt;"</span> % data[<span class="string">'summary'</span>].encode(<span class="string">'utf-8'</span>))</div><div class="line">            fout.write(<span class="string">'&lt;/tr&gt;'</span>)</div><div class="line">        fout.write(<span class="string">"&lt;/table&gt;"</span>)</div><div class="line">        fout.write(<span class="string">'&lt;/body&gt;'</span>)</div><div class="line">        fout.write(<span class="string">'&lt;/html&gt;'</span>)</div><div class="line">        fout.close()</div></pre></td></tr></table></figure>
<p>上面的存储器采用的文件的方式进行的存储。当然也可以采用数据库。 </p>
<p>源码地址:<a href="https://github.com/ruanwenwu/basic-python-drawer" target="_blank" rel="external">https://github.com/ruanwenwu/basic-python-drawer</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac环境下搭建hexo并发布到Github Pages]]></title>
      <url>http://yoursite.com/2016/08/14/%E6%90%AD%E5%BB%BAhexo%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0github-pages/</url>
      <content type="html"><![CDATA[<p>首先，最好切换到root用户,否则每次都要sudu，特别麻烦。</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>sudo -i</div></pre></td></tr></table></figure>
<h3 id="安装开发依赖环境git和node-js"><a href="#安装开发依赖环境git和node-js" class="headerlink" title="安装开发依赖环境git和node.js"></a>安装开发依赖环境git和node.js</h3><p>这两个软件的安装都比较容易。其中mac的话，最好安装Xcode，集成git，能少爬一点坑。</p>
<p>安装好git和node.js后就可以安装hexo了</p>
<p>进入到hexo的<a href="https://hexo.io/docs/" target="_blank" rel="external">官网文档页面</a>，按照文档说明一步一步来。</p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-<span class="keyword">cli</span></div></pre></td></tr></table></figure>
<p>安装博客到folder这个目录,如果不跟这个目录的话，就是默认到当前目录<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo init &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>cd &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>npm install</div></pre></td></tr></table></figure></p>
<p>到这里你就可以运行</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">server</span></div></pre></td></tr></table></figure>
<p>来启动本地hexo服务了。在浏览器里输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>就能看到hellow world这篇文章了。</p>
<p>最后，介绍我现在用的这个我自己非常喜欢的主题：<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="external">大道至简</a></p>
]]></content>
    </entry>
    
  
  
</search>
